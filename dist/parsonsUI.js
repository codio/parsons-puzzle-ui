(function webpackUniversalModuleDefinition(root, factory) {
	//ParsonsUI
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	//ParsonsUI
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	//ParsonsUI
	else if(typeof exports === 'object')
		exports["ParsonsUI"] = factory();
	//ParsonsUI
	else
		root["ParsonsUI"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/cash-dom/dist/cash.js":
/*!********************************************!*\
  !*** ./node_modules/cash-dom/dist/cash.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* MIT https://github.com/kenwheeler/cash */\n(function(){\n\"use strict\";\n\nvar propMap = {\n  /* GENERAL */\n  \"class\": 'className',\n  contenteditable: 'contentEditable',\n\n  /* LABEL */\n  \"for\": 'htmlFor',\n\n  /* INPUT */\n  readonly: 'readOnly',\n  maxlength: 'maxLength',\n  tabindex: 'tabIndex',\n\n  /* TABLE */\n  colspan: 'colSpan',\n  rowspan: 'rowSpan',\n\n  /* IMAGE */\n  usemap: 'useMap'\n};\n\nfunction attempt(fn, arg) {\n  try {\n    return fn(arg);\n  } catch (_a) {\n    return arg;\n  }\n}\n\nvar doc = document,\n    win = window,\n    docEle = doc.documentElement,\n    createElement = doc.createElement.bind(doc),\n    div = createElement('div'),\n    table = createElement('table'),\n    tbody = createElement('tbody'),\n    tr = createElement('tr'),\n    isArray = Array.isArray,\n    ArrayPrototype = Array.prototype,\n    concat = ArrayPrototype.concat,\n    filter = ArrayPrototype.filter,\n    indexOf = ArrayPrototype.indexOf,\n    map = ArrayPrototype.map,\n    push = ArrayPrototype.push,\n    slice = ArrayPrototype.slice,\n    some = ArrayPrototype.some,\n    splice = ArrayPrototype.splice;\nvar idRe = /^#[\\w-]*$/,\n    classRe = /^\\.[\\w-]*$/,\n    htmlRe = /<.+>/,\n    tagRe = /^\\w+$/; // @require ./variables.ts\n\nfunction find(selector, context) {\n  return !selector || !isDocument(context) && !isElement(context) ? [] : classRe.test(selector) ? context.getElementsByClassName(selector.slice(1)) : tagRe.test(selector) ? context.getElementsByTagName(selector) : context.querySelectorAll(selector);\n} // @require ./find.ts\n// @require ./variables.ts\n\n\nvar Cash =\n/** @class */\nfunction () {\n  function Cash(selector, context) {\n    if (!selector) return;\n    if (isCash(selector)) return selector;\n    var eles = selector;\n\n    if (isString(selector)) {\n      var ctx = (isCash(context) ? context[0] : context) || doc;\n      eles = idRe.test(selector) ? ctx.getElementById(selector.slice(1)) : htmlRe.test(selector) ? parseHTML(selector) : find(selector, ctx);\n      if (!eles) return;\n    } else if (isFunction(selector)) {\n      return this.ready(selector); //FIXME: `fn.ready` is not included in `core`, but it's actually a core functionality\n    }\n\n    if (eles.nodeType || eles === win) eles = [eles];\n    this.length = eles.length;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      this[i] = eles[i];\n    }\n  }\n\n  Cash.prototype.init = function (selector, context) {\n    return new Cash(selector, context);\n  };\n\n  return Cash;\n}();\n\nvar fn = Cash.prototype,\n    cash = fn.init;\ncash.fn = cash.prototype = fn; // Ensuring that `cash () instanceof cash`\n\nfn.length = 0;\nfn.splice = splice; // Ensuring a cash collection gets printed as array-like in Chrome's devtools\n\nif (typeof Symbol === 'function') {\n  // Ensuring a cash collection is iterable\n  fn[Symbol['iterator']] = ArrayPrototype[Symbol['iterator']];\n}\n\nfn.map = function (callback) {\n  return cash(concat.apply([], map.call(this, function (ele, i) {\n    return callback.call(ele, i, ele);\n  })));\n};\n\nfn.slice = function (start, end) {\n  return cash(slice.call(this, start, end));\n}; // @require ./cash.ts\n\n\nvar dashAlphaRe = /-([a-z])/g;\n\nfunction camelCase(str) {\n  return str.replace(dashAlphaRe, function (match, letter) {\n    return letter.toUpperCase();\n  });\n}\n\nfunction each(arr, callback, _reverse) {\n  if (_reverse) {\n    var i = arr.length;\n\n    while (i--) {\n      if (callback.call(arr[i], i, arr[i]) === false) return arr;\n    }\n  } else {\n    for (var i = 0, l = arr.length; i < l; i++) {\n      if (callback.call(arr[i], i, arr[i]) === false) return arr;\n    }\n  }\n\n  return arr;\n}\n\ncash.each = each;\n\nfn.each = function (callback) {\n  return each(this, callback);\n};\n\nfn.removeProp = function (prop) {\n  return this.each(function (i, ele) {\n    delete ele[propMap[prop] || prop];\n  });\n};\n\nfunction extend(target) {\n  var objs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    objs[_i - 1] = arguments[_i];\n  }\n\n  var length = arguments.length;\n  if (!length) return {};\n  if (length === 1) return extend(cash, target);\n\n  for (var i = 1; i < length; i++) {\n    for (var key in arguments[i]) {\n      target[key] = arguments[i][key];\n    }\n  }\n\n  return target;\n}\n\ncash.extend = extend;\n\nfn.extend = function (plugins) {\n  return extend(fn, plugins);\n};\n\ncash.guid = 1; // @require ./cash.ts\n\nfunction matches(ele, selector) {\n  var matches = ele && (ele['matches'] || ele['webkitMatchesSelector'] || ele['msMatchesSelector']);\n  return !!matches && !!selector && matches.call(ele, selector);\n}\n\nfunction isCash(x) {\n  return x instanceof Cash;\n}\n\nfunction isWindow(x) {\n  return !!x && x === x.window;\n}\n\nfunction isDocument(x) {\n  return !!x && x.nodeType === 9;\n}\n\nfunction isElement(x) {\n  return !!x && x.nodeType === 1;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nfunction isString(x) {\n  return typeof x === 'string';\n}\n\nfunction isUndefined(x) {\n  return x === undefined;\n}\n\nfunction isNull(x) {\n  return x === null;\n}\n\nfunction isNumeric(x) {\n  return !isNaN(parseFloat(x)) && isFinite(x);\n}\n\ncash.isWindow = isWindow;\ncash.isFunction = isFunction;\ncash.isNumeric = isNumeric;\ncash.isArray = isArray;\n\nfn.prop = function (prop, value) {\n  if (!prop) return;\n\n  if (isString(prop)) {\n    prop = propMap[prop] || prop;\n    if (arguments.length < 2) return this[0] && this[0][prop];\n    return this.each(function (i, ele) {\n      ele[prop] = value;\n    });\n  }\n\n  for (var key in prop) {\n    this.prop(key, prop[key]);\n  }\n\n  return this;\n};\n\nfn.get = function (index) {\n  if (isUndefined(index)) return slice.call(this);\n  index = Number(index);\n  return this[index < 0 ? index + this.length : index];\n};\n\nfn.eq = function (index) {\n  return cash(this.get(index));\n};\n\nfn.first = function () {\n  return this.eq(0);\n};\n\nfn.last = function () {\n  return this.eq(-1);\n}; // @require ./matches.ts\n// @require ./type_checking.ts\n\n\nfunction getCompareFunction(comparator) {\n  return isString(comparator) ? function (i, ele) {\n    return matches(ele, comparator);\n  } : isFunction(comparator) ? comparator : isCash(comparator) ? function (i, ele) {\n    return comparator.is(ele);\n  } : !comparator ? function () {\n    return false;\n  } : function (i, ele) {\n    return ele === comparator;\n  };\n}\n\nfn.filter = function (comparator) {\n  var compare = getCompareFunction(comparator);\n  return cash(filter.call(this, function (ele, i) {\n    return compare.call(ele, i, ele);\n  }));\n}; // @require collection/filter.ts\n\n\nfunction filtered(collection, comparator) {\n  return !comparator ? collection : collection.filter(comparator);\n} // @require ./type_checking.ts\n\n\nvar splitValuesRe = /\\S+/g;\n\nfunction getSplitValues(str) {\n  return isString(str) ? str.match(splitValuesRe) || [] : [];\n}\n\nfn.hasClass = function (cls) {\n  return !!cls && some.call(this, function (ele) {\n    return isElement(ele) && ele.classList.contains(cls);\n  });\n};\n\nfn.removeAttr = function (attr) {\n  var attrs = getSplitValues(attr);\n  return this.each(function (i, ele) {\n    if (!isElement(ele)) return;\n    each(attrs, function (i, a) {\n      ele.removeAttribute(a);\n    });\n  });\n};\n\nfunction attr(attr, value) {\n  if (!attr) return;\n\n  if (isString(attr)) {\n    if (arguments.length < 2) {\n      if (!this[0] || !isElement(this[0])) return;\n      var value_1 = this[0].getAttribute(attr);\n      return isNull(value_1) ? undefined : value_1;\n    }\n\n    if (isUndefined(value)) return this;\n    if (isNull(value)) return this.removeAttr(attr);\n    return this.each(function (i, ele) {\n      if (!isElement(ele)) return;\n      ele.setAttribute(attr, value);\n    });\n  }\n\n  for (var key in attr) {\n    this.attr(key, attr[key]);\n  }\n\n  return this;\n}\n\nfn.attr = attr;\n\nfn.toggleClass = function (cls, force) {\n  var classes = getSplitValues(cls),\n      isForce = !isUndefined(force);\n  return this.each(function (i, ele) {\n    if (!isElement(ele)) return;\n    each(classes, function (i, c) {\n      if (isForce) {\n        force ? ele.classList.add(c) : ele.classList.remove(c);\n      } else {\n        ele.classList.toggle(c);\n      }\n    });\n  });\n};\n\nfn.addClass = function (cls) {\n  return this.toggleClass(cls, true);\n};\n\nfn.removeClass = function (cls) {\n  if (arguments.length) return this.toggleClass(cls, false);\n  return this.attr('class', '');\n};\n\nfunction pluck(arr, prop, deep, until) {\n  var plucked = [],\n      isCallback = isFunction(prop),\n      compare = until && getCompareFunction(until);\n\n  for (var i = 0, l = arr.length; i < l; i++) {\n    if (isCallback) {\n      var val_1 = prop(arr[i]);\n      if (val_1.length) push.apply(plucked, val_1);\n    } else {\n      var val_2 = arr[i][prop];\n\n      while (val_2 != null) {\n        if (until && compare(-1, val_2)) break;\n        plucked.push(val_2);\n        val_2 = deep ? val_2[prop] : null;\n      }\n    }\n  }\n\n  return plucked;\n}\n\nfunction unique(arr) {\n  return arr.length > 1 ? filter.call(arr, function (item, index, self) {\n    return indexOf.call(self, item) === index;\n  }) : arr;\n}\n\ncash.unique = unique;\n\nfn.add = function (selector, context) {\n  return cash(unique(this.get().concat(cash(selector, context).get())));\n}; // @require core/type_checking.ts\n// @require core/variables.ts\n\n\nfunction computeStyle(ele, prop, isVariable) {\n  if (!isElement(ele)) return;\n  var style = win.getComputedStyle(ele, null);\n  return isVariable ? style.getPropertyValue(prop) || undefined : style[prop];\n} // @require ./compute_style.ts\n\n\nfunction computeStyleInt(ele, prop) {\n  return parseInt(computeStyle(ele, prop), 10) || 0;\n}\n\nvar cssVariableRe = /^--/; // @require ./variables.ts\n\nfunction isCSSVariable(prop) {\n  return cssVariableRe.test(prop);\n} // @require core/camel_case.ts\n// @require core/cash.ts\n// @require core/each.ts\n// @require core/variables.ts\n// @require ./is_css_variable.ts\n\n\nvar prefixedProps = {},\n    style = div.style,\n    vendorsPrefixes = ['webkit', 'moz', 'ms'];\n\nfunction getPrefixedProp(prop, isVariable) {\n  if (isVariable === void 0) {\n    isVariable = isCSSVariable(prop);\n  }\n\n  if (isVariable) return prop;\n\n  if (!prefixedProps[prop]) {\n    var propCC = camelCase(prop),\n        propUC = \"\" + propCC[0].toUpperCase() + propCC.slice(1),\n        props = (propCC + \" \" + vendorsPrefixes.join(propUC + \" \") + propUC).split(' ');\n    each(props, function (i, p) {\n      if (p in style) {\n        prefixedProps[prop] = p;\n        return false;\n      }\n    });\n  }\n\n  return prefixedProps[prop];\n}\n\n; // @require core/type_checking.ts\n// @require ./is_css_variable.ts\n\nvar numericProps = {\n  animationIterationCount: true,\n  columnCount: true,\n  flexGrow: true,\n  flexShrink: true,\n  fontWeight: true,\n  gridArea: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnStart: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowStart: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  widows: true,\n  zIndex: true\n};\n\nfunction getSuffixedValue(prop, value, isVariable) {\n  if (isVariable === void 0) {\n    isVariable = isCSSVariable(prop);\n  }\n\n  return !isVariable && !numericProps[prop] && isNumeric(value) ? value + \"px\" : value;\n}\n\nfunction css(prop, value) {\n  if (isString(prop)) {\n    var isVariable_1 = isCSSVariable(prop);\n    prop = getPrefixedProp(prop, isVariable_1);\n    if (arguments.length < 2) return this[0] && computeStyle(this[0], prop, isVariable_1);\n    if (!prop) return this;\n    value = getSuffixedValue(prop, value, isVariable_1);\n    return this.each(function (i, ele) {\n      if (!isElement(ele)) return;\n\n      if (isVariable_1) {\n        ele.style.setProperty(prop, value);\n      } else {\n        ele.style[prop] = value;\n      }\n    });\n  }\n\n  for (var key in prop) {\n    this.css(key, prop[key]);\n  }\n\n  return this;\n}\n\n;\nfn.css = css; // @optional ./css.ts\n// @require core/attempt.ts\n// @require core/camel_case.ts\n\nvar JSONStringRe = /^\\s+|\\s+$/;\n\nfunction getData(ele, key) {\n  var value = ele.dataset[key] || ele.dataset[camelCase(key)];\n  if (JSONStringRe.test(value)) return value;\n  return attempt(JSON.parse, value);\n} // @require core/attempt.ts\n// @require core/camel_case.ts\n\n\nfunction setData(ele, key, value) {\n  value = attempt(JSON.stringify, value);\n  ele.dataset[camelCase(key)] = value;\n}\n\nfunction data(name, value) {\n  if (!name) {\n    if (!this[0]) return;\n    var datas = {};\n\n    for (var key in this[0].dataset) {\n      datas[key] = getData(this[0], key);\n    }\n\n    return datas;\n  }\n\n  if (isString(name)) {\n    if (arguments.length < 2) return this[0] && getData(this[0], name);\n    if (isUndefined(value)) return this;\n    return this.each(function (i, ele) {\n      setData(ele, name, value);\n    });\n  }\n\n  for (var key in name) {\n    this.data(key, name[key]);\n  }\n\n  return this;\n}\n\nfn.data = data; // @optional ./data.ts\n\nfunction getDocumentDimension(doc, dimension) {\n  var docEle = doc.documentElement;\n  return Math.max(doc.body[\"scroll\" + dimension], docEle[\"scroll\" + dimension], doc.body[\"offset\" + dimension], docEle[\"offset\" + dimension], docEle[\"client\" + dimension]);\n} // @require css/helpers/compute_style_int.ts\n\n\nfunction getExtraSpace(ele, xAxis) {\n  return computeStyleInt(ele, \"border\" + (xAxis ? 'Left' : 'Top') + \"Width\") + computeStyleInt(ele, \"padding\" + (xAxis ? 'Left' : 'Top')) + computeStyleInt(ele, \"padding\" + (xAxis ? 'Right' : 'Bottom')) + computeStyleInt(ele, \"border\" + (xAxis ? 'Right' : 'Bottom') + \"Width\");\n}\n\neach([true, false], function (i, outer) {\n  each(['Width', 'Height'], function (i, prop) {\n    var name = \"\" + (outer ? 'outer' : 'inner') + prop;\n\n    fn[name] = function (includeMargins) {\n      if (!this[0]) return;\n      if (isWindow(this[0])) return outer ? this[0][\"inner\" + prop] : this[0].document.documentElement[\"client\" + prop];\n      if (isDocument(this[0])) return getDocumentDimension(this[0], prop);\n      return this[0][\"\" + (outer ? 'offset' : 'client') + prop] + (includeMargins && outer ? computeStyleInt(this[0], \"margin\" + (i ? 'Top' : 'Left')) + computeStyleInt(this[0], \"margin\" + (i ? 'Bottom' : 'Right')) : 0);\n    };\n  });\n});\neach(['Width', 'Height'], function (index, prop) {\n  var propLC = prop.toLowerCase();\n\n  fn[propLC] = function (value) {\n    if (!this[0]) return isUndefined(value) ? undefined : this;\n\n    if (!arguments.length) {\n      if (isWindow(this[0])) return this[0].document.documentElement[\"client\" + prop];\n      if (isDocument(this[0])) return getDocumentDimension(this[0], prop);\n      return this[0].getBoundingClientRect()[propLC] - getExtraSpace(this[0], !index);\n    }\n\n    var valueNumber = parseInt(value, 10);\n    return this.each(function (i, ele) {\n      if (!isElement(ele)) return;\n      var boxSizing = computeStyle(ele, 'boxSizing');\n      ele.style[propLC] = getSuffixedValue(propLC, valueNumber + (boxSizing === 'border-box' ? getExtraSpace(ele, !index) : 0));\n    });\n  };\n}); // @optional ./inner_outer.ts\n// @optional ./normal.ts\n// @require css/helpers/compute_style.ts\n\nvar defaultDisplay = {};\n\nfunction getDefaultDisplay(tagName) {\n  if (defaultDisplay[tagName]) return defaultDisplay[tagName];\n  var ele = createElement(tagName);\n  doc.body.insertBefore(ele, null);\n  var display = computeStyle(ele, 'display');\n  doc.body.removeChild(ele);\n  return defaultDisplay[tagName] = display !== 'none' ? display : 'block';\n} // @require css/helpers/compute_style.ts\n\n\nfunction isHidden(ele) {\n  return computeStyle(ele, 'display') === 'none';\n}\n\nvar displayProperty = '___cd';\n\nfn.toggle = function (force) {\n  return this.each(function (i, ele) {\n    if (!isElement(ele)) return;\n    var show = isUndefined(force) ? isHidden(ele) : force;\n\n    if (show) {\n      ele.style.display = ele[displayProperty] || '';\n\n      if (isHidden(ele)) {\n        ele.style.display = getDefaultDisplay(ele.tagName);\n      }\n    } else {\n      ele[displayProperty] = computeStyle(ele, 'display');\n      ele.style.display = 'none';\n    }\n  });\n};\n\nfn.hide = function () {\n  return this.toggle(false);\n};\n\nfn.show = function () {\n  return this.toggle(true);\n}; // @optional ./hide.ts\n// @optional ./show.ts\n// @optional ./toggle.ts\n\n\nfunction hasNamespaces(ns1, ns2) {\n  return !ns2 || !some.call(ns2, function (ns) {\n    return ns1.indexOf(ns) < 0;\n  });\n}\n\nvar eventsNamespace = '___ce',\n    eventsNamespacesSeparator = '.',\n    eventsFocus = {\n  focus: 'focusin',\n  blur: 'focusout'\n},\n    eventsHover = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n},\n    eventsMouseRe = /^(mouse|pointer|contextmenu|drag|drop|click|dblclick)/i; // @require ./variables.ts\n\nfunction getEventNameBubbling(name) {\n  return eventsHover[name] || eventsFocus[name] || name;\n} // @require ./variables.ts\n\n\nfunction getEventsCache(ele) {\n  return ele[eventsNamespace] = ele[eventsNamespace] || {};\n} // @require core/guid.ts\n// @require events/helpers/get_events_cache.ts\n\n\nfunction addEvent(ele, name, namespaces, selector, callback) {\n  var eventCache = getEventsCache(ele);\n  eventCache[name] = eventCache[name] || [];\n  eventCache[name].push([namespaces, selector, callback]);\n  ele.addEventListener(name, callback);\n} // @require ./variables.ts\n\n\nfunction parseEventName(eventName) {\n  var parts = eventName.split(eventsNamespacesSeparator);\n  return [parts[0], parts.slice(1).sort()]; // [name, namespace[]]\n} // @require ./get_events_cache.ts\n// @require ./has_namespaces.ts\n// @require ./parse_event_name.ts\n\n\nfunction removeEvent(ele, name, namespaces, selector, callback) {\n  var cache = getEventsCache(ele);\n\n  if (!name) {\n    for (name in cache) {\n      removeEvent(ele, name, namespaces, selector, callback);\n    }\n  } else if (cache[name]) {\n    cache[name] = cache[name].filter(function (_a) {\n      var ns = _a[0],\n          sel = _a[1],\n          cb = _a[2];\n      if (callback && cb.guid !== callback.guid || !hasNamespaces(ns, namespaces) || selector && selector !== sel) return true;\n      ele.removeEventListener(name, cb);\n    });\n  }\n}\n\nfn.off = function (eventFullName, selector, callback) {\n  var _this = this;\n\n  if (isUndefined(eventFullName)) {\n    this.each(function (i, ele) {\n      if (!isElement(ele) && !isDocument(ele) && !isWindow(ele)) return;\n      removeEvent(ele);\n    });\n  } else if (!isString(eventFullName)) {\n    for (var key in eventFullName) {\n      this.off(key, eventFullName[key]);\n    }\n  } else {\n    if (isFunction(selector)) {\n      callback = selector;\n      selector = '';\n    }\n\n    each(getSplitValues(eventFullName), function (i, eventFullName) {\n      var _a = parseEventName(getEventNameBubbling(eventFullName)),\n          name = _a[0],\n          namespaces = _a[1];\n\n      _this.each(function (i, ele) {\n        if (!isElement(ele) && !isDocument(ele) && !isWindow(ele)) return;\n        removeEvent(ele, name, namespaces, selector, callback);\n      });\n    });\n  }\n\n  return this;\n};\n\nfunction on(eventFullName, selector, data, callback, _one) {\n  var _this = this;\n\n  if (!isString(eventFullName)) {\n    for (var key in eventFullName) {\n      this.on(key, selector, data, eventFullName[key], _one);\n    }\n\n    return this;\n  }\n\n  if (!isString(selector)) {\n    if (isUndefined(selector) || isNull(selector)) {\n      selector = '';\n    } else if (isUndefined(data)) {\n      data = selector;\n      selector = '';\n    } else {\n      callback = data;\n      data = selector;\n      selector = '';\n    }\n  }\n\n  if (!isFunction(callback)) {\n    callback = data;\n    data = undefined;\n  }\n\n  if (!callback) return this;\n  each(getSplitValues(eventFullName), function (i, eventFullName) {\n    var _a = parseEventName(getEventNameBubbling(eventFullName)),\n        name = _a[0],\n        namespaces = _a[1];\n\n    if (!name) return;\n\n    _this.each(function (i, ele) {\n      if (!isElement(ele) && !isDocument(ele) && !isWindow(ele)) return;\n\n      var finalCallback = function finalCallback(event) {\n        if (event.namespace && !hasNamespaces(namespaces, event.namespace.split(eventsNamespacesSeparator))) return;\n        var thisArg = ele;\n\n        if (selector) {\n          var target = event.target;\n\n          while (!matches(target, selector)) {\n            if (target === ele) return;\n            target = target.parentNode;\n            if (!target) return;\n          }\n\n          thisArg = target;\n          event.___cd = true; // Delegate\n        }\n\n        if (event.___cd) {\n          Object.defineProperty(event, 'currentTarget', {\n            configurable: true,\n            get: function get() {\n              return thisArg;\n            }\n          });\n        }\n\n        Object.defineProperty(event, 'data', {\n          configurable: true,\n          get: function get() {\n            return data;\n          }\n        });\n        var returnValue = callback.call(thisArg, event, event.___td);\n\n        if (_one) {\n          removeEvent(ele, name, namespaces, selector, finalCallback);\n        }\n\n        if (returnValue === false) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      };\n\n      finalCallback.guid = callback.guid = callback.guid || cash.guid++;\n      addEvent(ele, name, namespaces, selector, finalCallback);\n    });\n  });\n  return this;\n}\n\nfn.on = on;\n\nfunction one(eventFullName, selector, data, callback) {\n  return this.on(eventFullName, selector, data, callback, true);\n}\n\n;\nfn.one = one;\n\nfn.ready = function (callback) {\n  var cb = function cb() {\n    return attempt(callback, cash);\n  };\n\n  if (doc.readyState !== 'loading') {\n    cb();\n  } else {\n    doc.addEventListener('DOMContentLoaded', cb);\n  }\n\n  return this;\n};\n\nfn.trigger = function (event, data) {\n  if (isString(event)) {\n    var _a = parseEventName(event),\n        name_1 = _a[0],\n        namespaces = _a[1];\n\n    if (!name_1) return this;\n    var type = eventsMouseRe.test(name_1) ? 'MouseEvents' : 'HTMLEvents';\n    event = doc.createEvent(type);\n    event.initEvent(name_1, true, true);\n    event.namespace = namespaces.join(eventsNamespacesSeparator);\n  }\n\n  event.___td = data;\n  var isEventFocus = event.type in eventsFocus;\n  return this.each(function (i, ele) {\n    if (isEventFocus && isFunction(ele[event.type])) {\n      ele[event.type]();\n    } else {\n      ele.dispatchEvent(event);\n    }\n  });\n}; // @optional ./off.ts\n// @optional ./on.ts\n// @optional ./one.ts\n// @optional ./ready.ts\n// @optional ./trigger.ts\n// @require core/pluck.ts\n// @require core/variables.ts\n\n\nfunction getValue(ele) {\n  if (ele.multiple && ele.options) return pluck(filter.call(ele.options, function (option) {\n    return option.selected && !option.disabled && !option.parentNode.disabled;\n  }), 'value');\n  return ele.value || '';\n}\n\nvar queryEncodeSpaceRe = /%20/g,\n    queryEncodeCRLFRe = /\\r?\\n/g;\n\nfunction queryEncode(prop, value) {\n  return \"&\" + encodeURIComponent(prop) + \"=\" + encodeURIComponent(value.replace(queryEncodeCRLFRe, '\\r\\n')).replace(queryEncodeSpaceRe, '+');\n}\n\nvar skippableRe = /file|reset|submit|button|image/i,\n    checkableRe = /radio|checkbox/i;\n\nfn.serialize = function () {\n  var query = '';\n  this.each(function (i, ele) {\n    each(ele.elements || [ele], function (i, ele) {\n      if (ele.disabled || !ele.name || ele.tagName === 'FIELDSET' || skippableRe.test(ele.type) || checkableRe.test(ele.type) && !ele.checked) return;\n      var value = getValue(ele);\n\n      if (!isUndefined(value)) {\n        var values = isArray(value) ? value : [value];\n        each(values, function (i, value) {\n          query += queryEncode(ele.name, value);\n        });\n      }\n    });\n  });\n  return query.slice(1);\n};\n\nfunction val(value) {\n  if (!arguments.length) return this[0] && getValue(this[0]);\n  return this.each(function (i, ele) {\n    var isSelect = ele.multiple && ele.options;\n\n    if (isSelect || checkableRe.test(ele.type)) {\n      var eleValue_1 = isArray(value) ? map.call(value, String) : isNull(value) ? [] : [String(value)];\n\n      if (isSelect) {\n        each(ele.options, function (i, option) {\n          option.selected = eleValue_1.indexOf(option.value) >= 0;\n        }, true);\n      } else {\n        ele.checked = eleValue_1.indexOf(ele.value) >= 0;\n      }\n    } else {\n      ele.value = isUndefined(value) || isNull(value) ? '' : value;\n    }\n  });\n}\n\nfn.val = val;\n\nfn.clone = function () {\n  return this.map(function (i, ele) {\n    return ele.cloneNode(true);\n  });\n};\n\nfn.detach = function (comparator) {\n  filtered(this, comparator).each(function (i, ele) {\n    if (ele.parentNode) {\n      ele.parentNode.removeChild(ele);\n    }\n  });\n  return this;\n};\n\nvar fragmentRe = /^\\s*<(\\w+)[^>]*>/,\n    singleTagRe = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/;\nvar containers = {\n  '*': div,\n  tr: tbody,\n  td: tr,\n  th: tr,\n  thead: table,\n  tbody: table,\n  tfoot: table\n}; //TODO: Create elements inside a document fragment, in order to prevent inline event handlers from firing\n//TODO: Ensure the created elements have the fragment as their parent instead of null, this also ensures we can deal with detatched nodes more reliably\n\nfunction parseHTML(html) {\n  if (!isString(html)) return [];\n  if (singleTagRe.test(html)) return [createElement(RegExp.$1)];\n  var fragment = fragmentRe.test(html) && RegExp.$1,\n      container = containers[fragment] || containers['*'];\n  container.innerHTML = html;\n  return cash(container.childNodes).detach().get();\n}\n\ncash.parseHTML = parseHTML;\n\nfn.empty = function () {\n  return this.each(function (i, ele) {\n    while (ele.firstChild) {\n      ele.removeChild(ele.firstChild);\n    }\n  });\n};\n\nfunction html(html) {\n  if (!arguments.length) return this[0] && this[0].innerHTML;\n  if (isUndefined(html)) return this;\n  return this.each(function (i, ele) {\n    if (!isElement(ele)) return;\n    ele.innerHTML = html;\n  });\n}\n\nfn.html = html;\n\nfn.remove = function (comparator) {\n  filtered(this, comparator).detach().off();\n  return this;\n};\n\nfunction text(text) {\n  if (isUndefined(text)) return this[0] ? this[0].textContent : '';\n  return this.each(function (i, ele) {\n    if (!isElement(ele)) return;\n    ele.textContent = text;\n  });\n}\n\n;\nfn.text = text;\n\nfn.unwrap = function () {\n  this.parent().each(function (i, ele) {\n    if (ele.tagName === 'BODY') return;\n    var $ele = cash(ele);\n    $ele.replaceWith($ele.children());\n  });\n  return this;\n};\n\nfn.offset = function () {\n  var ele = this[0];\n  if (!ele) return;\n  var rect = ele.getBoundingClientRect();\n  return {\n    top: rect.top + win.pageYOffset,\n    left: rect.left + win.pageXOffset\n  };\n};\n\nfn.offsetParent = function () {\n  return this.map(function (i, ele) {\n    var offsetParent = ele.offsetParent;\n\n    while (offsetParent && computeStyle(offsetParent, 'position') === 'static') {\n      offsetParent = offsetParent.offsetParent;\n    }\n\n    return offsetParent || docEle;\n  });\n};\n\nfn.position = function () {\n  var ele = this[0];\n  if (!ele) return;\n  var isFixed = computeStyle(ele, 'position') === 'fixed',\n      offset = isFixed ? ele.getBoundingClientRect() : this.offset();\n\n  if (!isFixed) {\n    var doc_1 = ele.ownerDocument;\n    var offsetParent = ele.offsetParent || doc_1.documentElement;\n\n    while ((offsetParent === doc_1.body || offsetParent === doc_1.documentElement) && computeStyle(offsetParent, 'position') === 'static') {\n      offsetParent = offsetParent.parentNode;\n    }\n\n    if (offsetParent !== ele && isElement(offsetParent)) {\n      var parentOffset = cash(offsetParent).offset();\n      offset.top -= parentOffset.top + computeStyleInt(offsetParent, 'borderTopWidth');\n      offset.left -= parentOffset.left + computeStyleInt(offsetParent, 'borderLeftWidth');\n    }\n  }\n\n  return {\n    top: offset.top - computeStyleInt(ele, 'marginTop'),\n    left: offset.left - computeStyleInt(ele, 'marginLeft')\n  };\n};\n\nfn.children = function (comparator) {\n  return filtered(cash(unique(pluck(this, function (ele) {\n    return ele.children;\n  }))), comparator);\n};\n\nfn.contents = function () {\n  return cash(unique(pluck(this, function (ele) {\n    return ele.tagName === 'IFRAME' ? [ele.contentDocument] : ele.tagName === 'TEMPLATE' ? ele.content.childNodes : ele.childNodes;\n  })));\n};\n\nfn.find = function (selector) {\n  return cash(unique(pluck(this, function (ele) {\n    return find(selector, ele);\n  })));\n}; // @require core/variables.ts\n// @require collection/filter.ts\n// @require traversal/find.ts\n\n\nvar HTMLCDATARe = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n    scriptTypeRe = /^$|^module$|\\/(java|ecma)script/i,\n    scriptAttributes = ['type', 'src', 'nonce', 'noModule'];\n\nfunction evalScripts(node, doc) {\n  var collection = cash(node);\n  collection.filter('script').add(collection.find('script')).each(function (i, ele) {\n    if (scriptTypeRe.test(ele.type) && docEle.contains(ele)) {\n      // The script type is supported // The element is attached to the DOM // Using `documentElement` for broader browser support\n      var script_1 = createElement('script');\n      script_1.text = ele.textContent.replace(HTMLCDATARe, '');\n      each(scriptAttributes, function (i, attr) {\n        if (ele[attr]) script_1[attr] = ele[attr];\n      });\n      doc.head.insertBefore(script_1, null);\n      doc.head.removeChild(script_1);\n    }\n  });\n} // @require ./eval_scripts.ts\n\n\nfunction insertElement(anchor, target, left, inside, evaluate) {\n  if (inside) {\n    // prepend/append\n    anchor.insertBefore(target, left ? anchor.firstChild : null);\n  } else {\n    // before/after\n    anchor.parentNode.insertBefore(target, left ? anchor : anchor.nextSibling);\n  }\n\n  if (evaluate) {\n    evalScripts(target, anchor.ownerDocument);\n  }\n} // @require ./insert_element.ts\n\n\nfunction insertSelectors(selectors, anchors, inverse, left, inside, reverseLoop1, reverseLoop2, reverseLoop3) {\n  each(selectors, function (si, selector) {\n    each(cash(selector), function (ti, target) {\n      each(cash(anchors), function (ai, anchor) {\n        var anchorFinal = inverse ? target : anchor,\n            targetFinal = inverse ? anchor : target,\n            indexFinal = inverse ? ti : ai;\n        insertElement(anchorFinal, !indexFinal ? targetFinal : targetFinal.cloneNode(true), left, inside, !indexFinal);\n      }, reverseLoop3);\n    }, reverseLoop2);\n  }, reverseLoop1);\n  return anchors;\n}\n\nfn.after = function () {\n  return insertSelectors(arguments, this, false, false, false, true, true);\n};\n\nfn.append = function () {\n  return insertSelectors(arguments, this, false, false, true);\n};\n\nfn.appendTo = function (selector) {\n  return insertSelectors(arguments, this, true, false, true);\n};\n\nfn.before = function () {\n  return insertSelectors(arguments, this, false, true);\n};\n\nfn.insertAfter = function (selector) {\n  return insertSelectors(arguments, this, true, false, false, false, false, true);\n};\n\nfn.insertBefore = function (selector) {\n  return insertSelectors(arguments, this, true, true);\n};\n\nfn.prepend = function () {\n  return insertSelectors(arguments, this, false, true, true, true, true);\n};\n\nfn.prependTo = function (selector) {\n  return insertSelectors(arguments, this, true, true, true, false, false, true);\n};\n\nfn.replaceWith = function (selector) {\n  return this.before(selector).remove();\n};\n\nfn.replaceAll = function (selector) {\n  cash(selector).replaceWith(this);\n  return this;\n};\n\nfn.wrapAll = function (selector) {\n  var structure = cash(selector),\n      wrapper = structure[0];\n\n  while (wrapper.children.length) {\n    wrapper = wrapper.firstElementChild;\n  }\n\n  this.first().before(structure);\n  return this.appendTo(wrapper);\n};\n\nfn.wrap = function (selector) {\n  return this.each(function (i, ele) {\n    var wrapper = cash(selector)[0];\n    cash(ele).wrapAll(!i ? wrapper : wrapper.cloneNode(true));\n  });\n};\n\nfn.wrapInner = function (selector) {\n  return this.each(function (i, ele) {\n    var $ele = cash(ele),\n        contents = $ele.contents();\n    contents.length ? contents.wrapAll(selector) : $ele.append(selector);\n  });\n};\n\nfn.has = function (selector) {\n  var comparator = isString(selector) ? function (i, ele) {\n    return find(selector, ele).length;\n  } : function (i, ele) {\n    return ele.contains(selector);\n  };\n  return this.filter(comparator);\n};\n\nfn.is = function (comparator) {\n  var compare = getCompareFunction(comparator);\n  return some.call(this, function (ele, i) {\n    return compare.call(ele, i, ele);\n  });\n};\n\nfn.next = function (comparator, _all, _until) {\n  return filtered(cash(unique(pluck(this, 'nextElementSibling', _all, _until))), comparator);\n};\n\nfn.nextAll = function (comparator) {\n  return this.next(comparator, true);\n};\n\nfn.nextUntil = function (until, comparator) {\n  return this.next(comparator, true, until);\n};\n\nfn.not = function (comparator) {\n  var compare = getCompareFunction(comparator);\n  return this.filter(function (i, ele) {\n    return (!isString(comparator) || isElement(ele)) && !compare.call(ele, i, ele);\n  });\n};\n\nfn.parent = function (comparator) {\n  return filtered(cash(unique(pluck(this, 'parentNode'))), comparator);\n};\n\nfn.index = function (selector) {\n  var child = selector ? cash(selector)[0] : this[0],\n      collection = selector ? this : cash(child).parent().children();\n  return indexOf.call(collection, child);\n};\n\nfn.closest = function (comparator) {\n  var filtered = this.filter(comparator);\n  if (filtered.length) return filtered;\n  var $parent = this.parent();\n  if (!$parent.length) return filtered;\n  return $parent.closest(comparator);\n};\n\nfn.parents = function (comparator, _until) {\n  return filtered(cash(unique(pluck(this, 'parentElement', true, _until))), comparator);\n};\n\nfn.parentsUntil = function (until, comparator) {\n  return this.parents(comparator, until);\n};\n\nfn.prev = function (comparator, _all, _until) {\n  return filtered(cash(unique(pluck(this, 'previousElementSibling', _all, _until))), comparator);\n};\n\nfn.prevAll = function (comparator) {\n  return this.prev(comparator, true);\n};\n\nfn.prevUntil = function (until, comparator) {\n  return this.prev(comparator, true, until);\n};\n\nfn.siblings = function (comparator) {\n  return filtered(cash(unique(pluck(this, function (ele) {\n    return cash(ele).parent().children().not(ele);\n  }))), comparator);\n}; // @optional ./children.ts\n// @optional ./closest.ts\n// @optional ./contents.ts\n// @optional ./find.ts\n// @optional ./has.ts\n// @optional ./is.ts\n// @optional ./next.ts\n// @optional ./next_all.ts\n// @optional ./next_until.ts\n// @optional ./not.ts\n// @optional ./parent.ts\n// @optional ./parents.ts\n// @optional ./parents_until.ts\n// @optional ./prev.ts\n// @optional ./prev_all.ts\n// @optional ./prev_until.ts\n// @optional ./siblings.ts\n// @optional attributes/index.ts\n// @optional collection/index.ts\n// @optional css/index.ts\n// @optional data/index.ts\n// @optional dimensions/index.ts\n// @optional effects/index.ts\n// @optional events/index.ts\n// @optional forms/index.ts\n// @optional manipulation/index.ts\n// @optional offset/index.ts\n// @optional traversal/index.ts\n// @require core/index.ts\n// @priority -100\n// @require ./cash.ts\n// @require ./variables.ts\n\n\nif (true) {\n  // Node.js\n  module.exports = cash;\n} else {}\n})();\n\n//# sourceURL=webpack://ParsonsUI/./node_modules/cash-dom/dist/cash.js?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ParsonsUI_1 = __importDefault(__webpack_require__(/*! ./lib/ParsonsUI */ \"./src/lib/ParsonsUI.ts\"));\n__webpack_require__(/*! ./style.less */ \"./src/style.less\");\nexports.build = function (selector, settings) { return new ParsonsUI_1.default(selector, settings); };\nexports.default = exports.build;\n\n\n//# sourceURL=webpack://ParsonsUI/./src/index.ts?");

/***/ }),

/***/ "./src/lib/ParsonsUI.ts":
/*!******************************!*\
  !*** ./src/lib/ParsonsUI.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cash_dom_1 = __importDefault(__webpack_require__(/*! cash-dom */ \"./node_modules/cash-dom/dist/cash.js\"));\nvar render = __importStar(__webpack_require__(/*! ./render */ \"./src/lib/render.ts\"));\nvar data_helper_1 = __webpack_require__(/*! ./data-helper */ \"./src/lib/data-helper.ts\");\nvar ParsonsUI = /** @class */ (function () {\n    function ParsonsUI(selector, initialSettings) {\n        this.initialSettings = initialSettings;\n        this.container = cash_dom_1.default(selector);\n        this.render();\n        this.bindEvents();\n    }\n    ParsonsUI.prototype.render = function () {\n        render.render(this.container, this.initialSettings);\n    };\n    ParsonsUI.prototype.bindEvents = function () {\n        var _this = this;\n        this.container.on('change', '#grader', function (event) {\n            event.preventDefault();\n            var grader = cash_dom_1.default(event.currentTarget).val();\n            render.renderGrader(_this.container, grader);\n        });\n        this.container.on('click', '#add-test', function (event) {\n            event.preventDefault();\n            var graderContainer = cash_dom_1.default(event.currentTarget).closest('.grader-form-container');\n            var isVarTests = graderContainer.hasClass('variable-check-grader-container');\n            var testList = graderContainer.find('.tests-list');\n            testList.append(isVarTests ? render.renderVarTest() : render.renderUnitTest());\n        });\n        this.container.on('click', '.action.duplicate', function (event) {\n            event.preventDefault();\n            var currentTest = cash_dom_1.default(event.currentTarget).closest('.test-container');\n            currentTest.clone().insertAfter(currentTest);\n        });\n        this.container.on('click', '.action.remove', function (event) {\n            event.preventDefault();\n            cash_dom_1.default(event.currentTarget).closest('.test-container').remove();\n        });\n        this.container.on('change', '#can-indent', function (event) {\n            event.preventDefault();\n            var $this = cash_dom_1.default(event.currentTarget);\n            var isIndentingEnabled = $this.is(':checked');\n            var commonSettingsContainer = $this.closest('.common-settings-container');\n            if (isIndentingEnabled) {\n                commonSettingsContainer.find('#indent-size').removeAttr('disabled');\n            }\n            else {\n                commonSettingsContainer.find('#indent-size').attr('disabled', 'disabled');\n            }\n        });\n    };\n    ParsonsUI.prototype.export = function () {\n        return data_helper_1.collectData(this.container, this.initialSettings.options);\n    };\n    return ParsonsUI;\n}());\nexports.default = ParsonsUI;\n\n\n//# sourceURL=webpack://ParsonsUI/./src/lib/ParsonsUI.ts?");

/***/ }),

/***/ "./src/lib/converters.ts":
/*!*******************************!*\
  !*** ./src/lib/converters.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertParsonsGraderFuncToEnum = function (grader) {\n    if (!grader) {\n        return \"LineBasedGrader\" /* LineBased */;\n    }\n    var graderName = typeof grader === 'string' ? grader : grader.name;\n    switch (graderName) {\n        case 'VariableCheckGrader':\n            return \"VariableCheckGrader\" /* VariableCheck */;\n        case 'TurtleGrader':\n            return \"TurtleGrader\" /* Turtle */;\n        case 'UnitTestGrader':\n            return \"UnitTestGrader\" /* UnitTest */;\n        case 'LanguageTranslationGrader':\n            return \"LanguageTranslationGrader\" /* LanguageTranslation */;\n        default:\n            return \"LineBasedGrader\" /* LineBased */;\n    }\n};\nexports.convertTestVariablesToString = function (variables) {\n    var lines = [];\n    Object.entries(variables).forEach(function (_a) {\n        var key = _a[0], value = _a[1];\n        lines.push(\"\\\"\" + key + \"\\\": \" + value);\n    });\n    return lines.join('\\n');\n};\nexports.convertUnitTestsFromString = function ( /* unitTests: string */) {\n    var test = { methodCall: '', expectedOutput: '', errorMessage: '' };\n    return [test];\n};\nexports.default = {\n    convertParsonsGraderFuncToEnum: exports.convertParsonsGraderFuncToEnum,\n    convertTestVariablesToString: exports.convertTestVariablesToString\n};\n\n\n//# sourceURL=webpack://ParsonsUI/./src/lib/converters.ts?");

/***/ }),

/***/ "./src/lib/data-helper.ts":
/*!********************************!*\
  !*** ./src/lib/data-helper.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cash_dom_1 = __importDefault(__webpack_require__(/*! cash-dom */ \"./node_modules/cash-dom/dist/cash.js\"));\nvar collectCommonSettings = function (container) {\n    var codeBlocks = container.find('#initial').val();\n    var distractors = container.find('#distractors').val();\n    var maxDistractors = parseInt(container.find('#max-distractors').val(), 10);\n    var initialWithDistractors = [\n        codeBlocks,\n        distractors.split('\\n')\n            .filter(function (line) { return !!line; })\n            .map(function (line) { return line + \" #distractor\"; })\n            .join('\\n')\n    ].join('\\n');\n    var grader = container.find('#grader').val();\n    var indentSize = parseInt(container.find('#indent-size').val(), 10);\n    var execLimit = parseInt(container.find('#exec-limit').val(), 10);\n    return {\n        initial: initialWithDistractors,\n        maxDistractors: !Number.isNaN(maxDistractors) ? maxDistractors : 10,\n        grader: grader || \"LineBasedGrader\" /* LineBased */,\n        requireDragging: container.find('#require-dragging').is(':checked'),\n        indenting: container.find('#can-indent').is(':checked'),\n        indentSize: !Number.isNaN(indentSize) ? indentSize : 50,\n        execLimit: !Number.isNaN(execLimit) ? execLimit : 2500\n    };\n};\nvar collectVariableTests = function (container) {\n    var tests = [];\n    container.find('.test-container').each(function (index, el) {\n        var $this = cash_dom_1.default(el);\n        var variables = {};\n        var variablesStr = $this.find('[name=\"variables\"]').val();\n        var description = $this.find('[name=\"description\"]').val();\n        var preCode = $this.find('[name=\"pre-code\"]').val();\n        var postCode = $this.find('[name=\"post-code\"]').val();\n        variablesStr.split('\\n').forEach(function (line) {\n            var params = /^\\s*\"(.*)\":\\s*(.*)\\s*$/.exec(line);\n            if (params && params.length !== 0) {\n                var key = params[1], value = params[2];\n                var trimmedValue = value.trim();\n                var isNumber = /^[0-9]*$/.test(trimmedValue);\n                variables[key] = isNumber ? parseInt(value, 10) : value.replace(/^\"(.*)\"$/, '$1');\n            }\n        });\n        tests.push({\n            message: description,\n            initcode: preCode,\n            code: postCode,\n            variables: variables\n        });\n    });\n    return tests;\n};\nvar collectVariableCheckGraderOptions = function (container) {\n    return {\n        vartests: collectVariableTests(container)\n    };\n};\nvar collectUnitTestGraderOptions = function (container) {\n    var unitTests = [];\n    var codePrepend = container.find('[name=\"code-prepend\"]').val();\n    container.find('.test-container').each(function (index, el) {\n        var $this = cash_dom_1.default(el);\n        var methodCall = $this.find('[name=\"method-call\"]').val();\n        var errorMessage = $this.find('[name=\"error-message\"]').val();\n        var expectedOutput = $this.find('[name=\"expected-output\"]').val();\n        unitTests.push({ methodCall: methodCall, errorMessage: errorMessage, expectedOutput: expectedOutput });\n    });\n    var unitTestsArr = __spreadArrays([\n        'import unittestparson',\n        'class myTests(unittestparson.unittest):'\n    ], unitTests.map(function (test, index) { return [\n        \"  def test_\" + index + \"(self):\",\n        \"    self.assertEqual(\" + test.methodCall + \",\" + test.expectedOutput + \",\" + test.errorMessage + \")\"\n    ].join('\\n'); }), [\n        '_test_result = myTests().main()'\n    ]);\n    return {\n        unittestCodePrepend: codePrepend,\n        unitTests: unitTestsArr.join('\\n')\n    };\n};\nvar collectLanguageTranslationGraderOptions = function (container) {\n    return {\n        programmingLang: container.find('#programming-lang').val(),\n        executableCode: container.find('#executable-code').val(),\n        vartests: collectVariableTests(container)\n    };\n};\nvar collectTurtleGraderOptions = function (container) {\n    return {\n        programmingLang: container.find('#programming-lang').val(),\n        executableCode: container.find('#executable-code').val(),\n        turtleModelCode: container.find('#turtle-model-code').val(),\n    };\n};\nexports.collectData = function (container, initialOptions) {\n    var common = collectCommonSettings(container);\n    var grader = common.grader;\n    // todo add python to lang blocks\n    var options = {\n        sortableId: initialOptions.sortableId || 'sortable',\n        max_wrong_lines: common.maxDistractors,\n        grader: grader,\n        exec_limit: common.execLimit,\n        can_indent: common.indenting,\n        x_indent: common.indentSize,\n        lang: initialOptions.lang || 'en',\n        toggleTypeHandlers: initialOptions.toggleTypeHandlers,\n        feedback_cb: initialOptions.feedback_cb\n    };\n    if (common.requireDragging) {\n        options.trashId = initialOptions.trashId || 'sortableTrash';\n    }\n    switch (grader) {\n        case \"VariableCheckGrader\" /* VariableCheck */: {\n            var graderOptions = collectVariableCheckGraderOptions(container);\n            options.vartests = graderOptions.vartests;\n            break;\n        }\n        case \"UnitTestGrader\" /* UnitTest */: {\n            var graderOptions = collectUnitTestGraderOptions(container);\n            options.unittest_code_prepend = graderOptions.unittestCodePrepend;\n            options.unittests = graderOptions.unitTests;\n            break;\n        }\n        case \"LanguageTranslationGrader\" /* LanguageTranslation */: {\n            var graderOptions = collectLanguageTranslationGraderOptions(container);\n            options.executable_code = graderOptions.executableCode;\n            options.programmingLang = graderOptions.programmingLang;\n            options.vartests = graderOptions.vartests;\n            break;\n        }\n        case \"TurtleGrader\" /* Turtle */: {\n            var graderOptions = collectTurtleGraderOptions(container);\n            options.executable_code = graderOptions.executableCode;\n            options.programmingLang = graderOptions.programmingLang;\n            options.turtleModelCode = graderOptions.turtleModelCode;\n            break;\n        }\n        default:\n            break;\n    }\n    return {\n        initial: common.initial,\n        options: options\n    };\n};\nexports.default = {\n    collectData: exports.collectData\n};\n\n\n//# sourceURL=webpack://ParsonsUI/./src/lib/data-helper.ts?");

/***/ }),

/***/ "./src/lib/render.ts":
/*!***************************!*\
  !*** ./src/lib/render.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cash_dom_1 = __importDefault(__webpack_require__(/*! cash-dom */ \"./node_modules/cash-dom/dist/cash.js\"));\nvar converters_1 = __webpack_require__(/*! ./converters */ \"./src/lib/converters.ts\");\nvar renderInitialCodeBlock = function (code) {\n    var codeBlocksContainer = cash_dom_1.default('<div class=\"code-blocks-container\"></div>');\n    // todo remove distractors from code\n    var taContainer = cash_dom_1.default('<div class=\"code-blocks-ta-container fieldset\"></div>');\n    taContainer.append('<label for=\"initial\">Code to Become Blocks</label>');\n    var taCode = cash_dom_1.default(\"<textarea id=\\\"initial\\\" rows=\\\"8\\\">\" + code + \"</textarea>\");\n    taCode.attr('placeholder', 'Type Solution Here');\n    taContainer.append(taCode);\n    codeBlocksContainer.append(taContainer);\n    var hintText = '$$toggle::value1::value2::valuen$$&nbsp;&nbsp;&nbsp;&nbsp; new line \\\\n in same block';\n    codeBlocksContainer.append(\"<div class=\\\"code-blocks-hint\\\">\" + hintText + \"</div>\");\n    return codeBlocksContainer;\n};\nvar renderDistractorBlocks = function (settings) {\n    var distractorBlockContainer = cash_dom_1.default('<div class=\"distractor-blocks-container\"></div>');\n    var taContainer = cash_dom_1.default('<div class=\"distractor-blocks-ta-container fieldset\"></div>');\n    // todo extract distractors from code\n    var distractors = settings.initial;\n    taContainer.append('<label for=\"distractors\">Code to Become Distractor Blocks</label>');\n    var taDistractors = cash_dom_1.default(\"<textarea id=\\\"distractors\\\" rows=\\\"4\\\">\" + distractors + \"</textarea>\");\n    taDistractors.attr('placeholder', 'Code blocks that serve as distractions (incorrect options)');\n    taContainer.append(taDistractors);\n    distractorBlockContainer.append(taContainer);\n    var maxDistractors = settings.options.max_wrong_lines || 10;\n    var maxDistractorsContainer = cash_dom_1.default('<div class=\"distractor-blocks-max-container fieldset\"></div>');\n    maxDistractorsContainer.append('<label for=\"max-distractors\">Max Distractors</label>');\n    maxDistractorsContainer.append(\"<input id=\\\"max-distractors\\\" type=\\\"number\\\" value=\\\"\" + maxDistractors + \"\\\" />\");\n    distractorBlockContainer.append(maxDistractorsContainer);\n    return distractorBlockContainer;\n};\nvar renderGraderSelect = function (grader) {\n    var graderContainer = cash_dom_1.default('<div class=\"grader-container fieldset\"></div>');\n    graderContainer.append('<label for=\"grader\">Grader</label>');\n    var graderSelect = cash_dom_1.default('<select id=\"grader\"></select>');\n    graderSelect.append(\"<option value=\\\"\" + \"LineBasedGrader\" /* LineBased */ + \"\\\">LineBasedGrader</option>\");\n    graderSelect.append(\"<option value=\\\"\" + \"VariableCheckGrader\" /* VariableCheck */ + \"\\\">VariableCheckGrader</option>\");\n    graderSelect.append(\"<option value=\\\"\" + \"UnitTestGrader\" /* UnitTest */ + \"\\\">UnitTestGrader</option>\");\n    graderSelect.append(\"<option value=\\\"\" + \"LanguageTranslationGrader\" /* LanguageTranslation */ + \"\\\">LanguageTranslationGrader</option>\");\n    graderSelect.append(\"<option value=\\\"\" + \"TurtleGrader\" /* Turtle */ + \"\\\">TurtleGrader</option>\");\n    graderSelect.val(converters_1.convertParsonsGraderFuncToEnum(grader));\n    graderContainer.append(graderSelect);\n    return graderContainer;\n};\nvar renderRequireDragging = function (trashId) {\n    var draggingContainer = cash_dom_1.default('<div class=\"dragging-container fieldset\"></div>');\n    draggingContainer.append('<label for=\"require-dragging\">Require dragging?</label>');\n    draggingContainer.append(\"<input id=\\\"require-dragging\\\" type=\\\"checkbox\\\" \" + (trashId ? 'checked' : '') + \" />\");\n    return draggingContainer;\n};\nvar renderIndenting = function (canIndent) {\n    var indentingContainer = cash_dom_1.default('<div class=\"indenting-container fieldset\"></div>');\n    indentingContainer.append('<label for=\"can-indent\">Indenting?</label>');\n    indentingContainer.append(\"<input id=\\\"can-indent\\\" type=\\\"checkbox\\\" \" + (canIndent || canIndent === undefined ? 'checked' : '') + \" />\");\n    return indentingContainer;\n};\nvar renderIndentSize = function (canIndent, xIndent) {\n    var indentSizeContainer = cash_dom_1.default('<div class=\"indent-size-container fieldset\"></div>');\n    indentSizeContainer.append('<label for=\"indent-size\">Indent Size</label>');\n    indentSizeContainer.append(\"<input id=\\\"indent-size\\\" type=\\\"text\\\" value=\\\"\" + (xIndent !== undefined ? xIndent : 50) + \"\\\" \" + (canIndent === false ? 'disabled' : '') + \" />\");\n    return indentSizeContainer;\n};\nvar renderExecLimit = function (execLimit) {\n    var draggingContainer = cash_dom_1.default('<div class=\"exec-limit-container fieldset\"></div>');\n    draggingContainer.append('<label for=\"exec-limit\">Exec Limit</label>');\n    draggingContainer.append(\"<input id=\\\"exec-limit\\\" type=\\\"text\\\" value=\\\"\" + (execLimit !== undefined ? execLimit : 2500) + \"\\\" />\");\n    return draggingContainer;\n};\nvar renderCommonSettings = function (options) {\n    var commonSettingsContainer = cash_dom_1.default('<div class=\"common-settings-container\"></div>');\n    commonSettingsContainer.append(renderGraderSelect(options.grader));\n    commonSettingsContainer.append(renderRequireDragging(options.trashId));\n    commonSettingsContainer.append(renderIndenting(options.can_indent));\n    commonSettingsContainer.append(renderIndentSize(options.can_indent, options.x_indent));\n    commonSettingsContainer.append(renderExecLimit(options.exec_limit));\n    return commonSettingsContainer;\n};\nexports.renderVarTest = function (test) {\n    var testContainer = cash_dom_1.default('<li class=\"test-container\"></li>');\n    var actionsContainer = cash_dom_1.default('<div class=\"action-container\"></div>');\n    actionsContainer.append('<button type=\"button\" class=\"action duplicate\">clone</button>');\n    actionsContainer.append('<button type=\"button\" class=\"action small remove\">remove</button>');\n    testContainer.append(actionsContainer);\n    var testInfoContainer = cash_dom_1.default('<div class=\"test-info-container\"></div>');\n    var column1 = cash_dom_1.default('<div class=\"column\"></div>');\n    var variablesContainer = cash_dom_1.default('<div class=\"fieldset\"></div>');\n    variablesContainer.append('<label>Expected variable values*</label>');\n    var taVariables = cash_dom_1.default(\"<textarea rows=\\\"2\\\" name=\\\"variables\\\">\" + (test ? converters_1.convertTestVariablesToString(test.variables) : '') + \"</textarea>\");\n    taVariables.attr('placeholder', '\"var_Name_1\": value\\n\"var_Name_2\": value');\n    variablesContainer.append(taVariables);\n    column1.append(variablesContainer);\n    var descriptionContainer = cash_dom_1.default('<div class=\"fieldset\"></div>');\n    descriptionContainer.append('<label>Test Description*</label>');\n    var taDescription = cash_dom_1.default(\"<textarea rows=\\\"2\\\" name=\\\"description\\\">\" + (test ? test.message : '') + \"</textarea>\");\n    taDescription.attr('placeholder', 'Description of test that is shown to learner');\n    descriptionContainer.append(taDescription);\n    column1.append(descriptionContainer);\n    var column2 = cash_dom_1.default('<div class=\"column\"></div>');\n    var preCodeContainer = cash_dom_1.default('<div class=\"fieldset\"></div>');\n    preCodeContainer.append('<label>Pre Code</label>');\n    var taPreCode = cash_dom_1.default(\"<textarea rows=\\\"2\\\" name=\\\"pre-code\\\">\" + (test ? test.initcode : '') + \"</textarea>\");\n    taPreCode.attr('placeholder', 'Code prepended before student code');\n    preCodeContainer.append(taPreCode);\n    column2.append(preCodeContainer);\n    var postCodeContainer = cash_dom_1.default('<div class=\"fieldset\"></div>');\n    postCodeContainer.append('<label>Post Code</label>');\n    var taPostCode = cash_dom_1.default(\"<textarea rows=\\\"2\\\" name=\\\"post-code\\\">\" + (test ? test.code : '') + \"</textarea>\");\n    taPostCode.attr('placeholder', 'Code appended after student code');\n    postCodeContainer.append(taPostCode);\n    column2.append(postCodeContainer);\n    testInfoContainer.append(column1);\n    testInfoContainer.append(column2);\n    testContainer.append(testInfoContainer);\n    return testContainer;\n};\nvar renderVariableCheckGrader = function (options, additionalGraderClass) {\n    var classes = [\n        'grader-form-container',\n        'variable-check-grader-container',\n        additionalGraderClass || ''\n    ];\n    var graderFormContainer = cash_dom_1.default(\"<div class=\\\"\" + classes.join(' ') + \"\\\"></div>\");\n    graderFormContainer.append('<div class=\"add-test-container\"><button id=\"add-test\" type=\"button\">New Test</button></div>');\n    var testsContainer = cash_dom_1.default('<div class=\"tests-container\"></div>');\n    var testsList = cash_dom_1.default('<ul class=\"tests-list\"></ul>');\n    if (options && options.vartests) {\n        options.vartests.forEach(function (test) { return testsList.append(exports.renderVarTest(test)); });\n    }\n    else {\n        testsList.append(exports.renderVarTest());\n    }\n    testsContainer.append(testsList);\n    graderFormContainer.append(testsContainer);\n    return graderFormContainer;\n};\nvar renderUnitTestCodePrepend = function (code) {\n    var codePrependContainer = cash_dom_1.default('<div class=\"code-prepend-container\"></div>');\n    var taContainer = cash_dom_1.default('<div class=\"code-prepend-ta-container fieldset\"></div>');\n    taContainer.append('<label for=\"code-prepend\">Code prepended before student code</label>');\n    var taCode = cash_dom_1.default(\"<textarea id=\\\"code-prepend\\\" rows=\\\"4\\\">\" + (code || '') + \"</textarea>\");\n    taCode.attr('placeholder', 'Code prepended before student code');\n    taContainer.append(taCode);\n    codePrependContainer.append(taContainer);\n    return codePrependContainer;\n};\nexports.renderUnitTest = function (test) {\n    var testContainer = cash_dom_1.default('<li class=\"test-container\"></li>');\n    var actionsContainer = cash_dom_1.default('<div class=\"action-container\"></div>');\n    actionsContainer.append('<button type=\"button\" class=\"action duplicate\">clone</button>');\n    actionsContainer.append('<button type=\"button\" class=\"action small remove\">remove</button>');\n    testContainer.append(actionsContainer);\n    var testInfoContainer = cash_dom_1.default('<div class=\"test-info-container\"></div>');\n    var column1 = cash_dom_1.default('<div class=\"column\"></div>');\n    var methodsContainer = cash_dom_1.default('<div class=\"fieldset\"></div>');\n    methodsContainer.append('<label>Method Call(s)*</label>');\n    var taMethods = cash_dom_1.default(\"<textarea rows=\\\"2\\\" name=\\\"method-call\\\">\" + (test ? test.methodCall : '') + \"</textarea>\");\n    taMethods.attr('placeholder', 'Write method call with arguments');\n    methodsContainer.append(taMethods);\n    column1.append(methodsContainer);\n    var messageContainer = cash_dom_1.default('<div class=\"fieldset\"></div>');\n    messageContainer.append('<label>Error Message (optional)</label>');\n    var taMessage = cash_dom_1.default(\"<textarea rows=\\\"2\\\" name=\\\"error-message\\\">\" + (test ? test.errorMessage : '') + \"</textarea>\");\n    taMessage.attr('placeholder', 'What student sees if this test fails');\n    messageContainer.append(taMessage);\n    column1.append(messageContainer);\n    var column2 = cash_dom_1.default('<div class=\"column\"></div>');\n    var expectedOutputContainer = cash_dom_1.default('<div class=\"fieldset\"></div>');\n    expectedOutputContainer.append('<label>Expected Output(s)*</label>');\n    var taExpectedOutput = cash_dom_1.default(\"<textarea rows=\\\"2\\\" name=\\\"expected-output\\\">\" + (test ? test.expectedOutput : '') + \"</textarea>\");\n    taExpectedOutput.attr('placeholder', 'Expected output of method call');\n    expectedOutputContainer.append(taExpectedOutput);\n    column2.append(expectedOutputContainer);\n    testInfoContainer.append(column1);\n    testInfoContainer.append(column2);\n    testContainer.append(testInfoContainer);\n    return testContainer;\n};\nvar renderUnitTestGrader = function (options) {\n    var graderFormContainer = cash_dom_1.default('<div class=\"grader-form-container unit-test-grader-container\"></div>');\n    graderFormContainer.append(renderUnitTestCodePrepend(options ? options.unittest_code_prepend : ''));\n    var tests = options ? converters_1.convertUnitTestsFromString( /* options.unittests */) : null;\n    graderFormContainer.append('<div class=\"add-test-container\"><button id=\"add-test\" type=\"button\">New Test</button></div>');\n    var testsContainer = cash_dom_1.default('<div class=\"tests-container\"></div>');\n    var testsList = cash_dom_1.default('<ul class=\"tests-list\"></ul>');\n    if (tests) {\n        tests.forEach(function (test) { return testsList.append(exports.renderUnitTest(test)); });\n    }\n    else {\n        testsList.append(exports.renderUnitTest());\n    }\n    testsContainer.append(testsList);\n    graderFormContainer.append(testsContainer);\n    return graderFormContainer;\n};\nvar renderProgrammingLang = function (lang) {\n    var programmingLangContainer = cash_dom_1.default('<div class=\"programming-lang-container fieldset\"></div>');\n    programmingLangContainer.append('<label for=\"programming-lang\">Programming Language</label>');\n    var programmingLangSelect = cash_dom_1.default('<select id=\"programming-lang\"></select>');\n    programmingLangSelect.append('<option value=\"pseudo\">pseudocode</option>');\n    programmingLangSelect.append('<option value=\"java\">java</option>');\n    programmingLangSelect.append('<option value=\"python\">python</option>');\n    if (lang) {\n        programmingLangSelect.val(lang);\n    }\n    programmingLangContainer.append(programmingLangSelect);\n    return programmingLangContainer;\n};\nvar renderExecutableCode = function (code) {\n    var executableCodeContainer = cash_dom_1.default('<div class=\"executable-code-container\"></div>');\n    var taContainer = cash_dom_1.default('<div class=\"executable-code-ta-container fieldset\"></div>');\n    taContainer.append('<label for=\"code-prepend\">Executable code</label>');\n    var taCode = cash_dom_1.default(\"<textarea id=\\\"executable-code\\\" rows=\\\"4\\\">\" + (code || '') + \"</textarea>\");\n    taCode.attr('placeholder', 'Executable code');\n    taContainer.append(taCode);\n    executableCodeContainer.append(taContainer);\n    return executableCodeContainer;\n};\nvar renderTurtleModelCode = function (code) {\n    var turtleModelCodeContainer = cash_dom_1.default('<div class=\"turtle-model-code-container\"></div>');\n    var taContainer = cash_dom_1.default('<div class=\"turtle-model-code-ta-container fieldset\"></div>');\n    taContainer.append('<label for=\"turtle-model-code\">Turtle Model Code</label>');\n    var taCode = cash_dom_1.default(\"<textarea id=\\\"turtle-model-code\\\" rows=\\\"4\\\">\" + (code || '') + \"</textarea>\");\n    taCode.attr('placeholder', 'Turtle Model Code');\n    taContainer.append(taCode);\n    turtleModelCodeContainer.append(taContainer);\n    return turtleModelCodeContainer;\n};\nvar renderLanguageTranslationGrader = function (options) {\n    var grader = renderVariableCheckGrader(options, 'language-translation-grader-container');\n    grader.prepend(renderExecutableCode(options ? options.executable_code : ''));\n    grader.prepend(renderProgrammingLang(options ? options.programmingLang : ''));\n    return grader;\n};\nvar renderTurtleGrader = function (options) {\n    var graderFormContainer = cash_dom_1.default('<div class=\"grader-form-container turtle-grader-container\"></div>');\n    graderFormContainer.append(renderProgrammingLang(options ? options.programmingLang : ''));\n    graderFormContainer.append(renderExecutableCode(options ? options.executable_code : ''));\n    graderFormContainer.append(renderTurtleModelCode(options ? options.turtleModelCode : ''));\n    return graderFormContainer;\n};\nvar renderGraderForm = function (container, grader, options) {\n    container.closest('.ParsonsUI').removeClass().addClass(\"ParsonsUI \" + grader.toString());\n    container.find('.grader-form-container').remove();\n    switch (grader) {\n        case \"VariableCheckGrader\" /* VariableCheck */:\n            container.append(renderVariableCheckGrader(options));\n            break;\n        case \"UnitTestGrader\" /* UnitTest */:\n            container.append(renderUnitTestGrader(options));\n            break;\n        case \"LanguageTranslationGrader\" /* LanguageTranslation */:\n            container.append(renderLanguageTranslationGrader(options));\n            break;\n        case \"TurtleGrader\" /* Turtle */:\n            container.append(renderTurtleGrader(options));\n            break;\n        default:\n            break;\n    }\n};\nexports.renderGrader = function (container, grader) {\n    renderGraderForm(container.find('.ParsonsUI'), grader);\n};\nexports.render = function (container, settings) {\n    container.empty();\n    var uiContainer = cash_dom_1.default('<div class=\"ParsonsUI\"></div>');\n    uiContainer.append(renderInitialCodeBlock(settings.initial));\n    uiContainer.append(renderDistractorBlocks(settings));\n    uiContainer.append(renderCommonSettings(settings.options));\n    renderGraderForm(uiContainer, \"LineBasedGrader\" /* LineBased */, settings.options);\n    container.append(uiContainer);\n};\nexports.default = {\n    render: exports.render\n};\n\n\n//# sourceURL=webpack://ParsonsUI/./src/lib/render.ts?");

/***/ }),

/***/ "./src/style.less":
/*!************************!*\
  !*** ./src/style.less ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n    if(false) { var cssReload; }\n  \n\n//# sourceURL=webpack://ParsonsUI/./src/style.less?");

/***/ })

/******/ });
});