var LIS={};!function(e,t){LIS.patience_sort=function(e){for(var r=t.toArray(e),n=[[r[0]]],s=0,i=1;i<r.length;i++){var h=r[i],o=n[s];h<t.last(o)?o.push(h):(n.push([h]),s++)}return n},LIS.find_lises=function(e){if((e=t.toArray(e)).length<1)return e;var r,n,s,i,h,o,f,u,l=[];for(o=0;o<e.length;o++){for(r=[],n=e[o],f=0;f<l.length;f++){for(s=l[f],u=0;u<n.length;u++)(h=n[u])>t.last(s)&&((i=s.slice(0)).push(h),r.push(i));r.push(s)}for(u=0;u<n.length;u++)r.push([n[u]]);l=r}var a=0;for(o=l.length;o--;)a=Math.max(a,l[o].length);return t.select(l,function(e){return e.length>=a})},LIS.best_lise=function(e){var r=t.map(e,function(e,t){if(e.length<=1)return{score:0,index:t};for(var r=0,n=1;n<e.length;n++)e[n-1]==e[n]-1&&r++;return{score:r,index:t}});return e[t.max(r,function(e){return e.score}).index]},LIS.best_lise_inverse=function(e){var r=this.patience_sort(t.toArray(e)),n=this.find_lises(r),s=this.best_lise(n);return t.difference(e,s)},LIS.best_lise_inverse_indices=function(e){for(var r=this.patience_sort(t.toArray(e)),n=this.find_lises(r),s=this.best_lise(n),i=[],h=0,o=0;o<s.length;o++)for(;h<e.length;h++){if(e[h]===s[o]){h++;break}i.push(h)}for(;h<e.length;h++)i.push(h);return i}}($,_);